"""
Requires that exactly one field must be supplied and that field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

"""Exposes a URL that specifies the behavior of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behavior of this scalar."""
  url: String!
) on SCALAR

"""Autogenerated input type of BackdoorLogin"""
input BackdoorLoginInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  email: String!
}

"""Autogenerated return type of BackdoorLogin."""
type BackdoorLoginPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  user: User!
}

"""Autogenerated input type of CreatePractice"""
input CreatePracticeInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  name: String!
  country: String = "au"
  proposalEditor: String = "preferred_npe"
  subscriptionStatus: String = "subscribed_scale"
  featureFlags: [String!] = []
}

"""Autogenerated return type of CreatePractice."""
type CreatePracticePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  practice: Practice!
  principal: User!
  proposals: [Engagement!]!
}

type Engagement {
  id: ID!
}

type Mutation {
  """Authenticate user by email without any validations"""
  backdoorLogin(
    """Parameters for BackdoorLogin"""
    input: BackdoorLoginInput!
  ): BackdoorLoginPayload
  createPractice(
    """Parameters for CreatePractice"""
    input: CreatePracticeInput!
  ): CreatePracticePayload

  """Scenario: Practice with active services for Renewal"""
  seedActiveServicesForRenewal(
    """Parameters for SeedActiveServicesForRenewal"""
    input: SeedActiveServicesForRenewalInput!
  ): SeedActiveServicesForRenewalPayload
  seedPracticeWithBillingItems(
    """Parameters for SeedPracticeWithBillingItems"""
    input: SeedPracticeWithBillingItemsInput!
  ): SeedPracticeWithBillingItemsPayload
  seedPracticeWithPayments(
    """Parameters for SeedPracticeWithPayments"""
    input: SeedPracticeWithPaymentsInput!
  ): SeedPracticeWithPaymentsPayload
  seedPracticeWithTfaUser(
    """Parameters for SeedPracticeWithTfaUser"""
    input: SeedPracticeWithTfaUserInput!
  ): SeedPracticeWithTfaUserPayload

  """A series of practices under different various payment control states"""
  seedPracticesWithPaymentControlStates(
    """Parameters for SeedPracticesWithPaymentControlStates"""
    input: SeedPracticesWithPaymentControlStatesInput!
  ): SeedPracticesWithPaymentControlStatesPayload
  seedStandardPractice(
    """Parameters for SeedStandardPractice"""
    input: SeedStandardPracticeInput!
  ): SeedStandardPracticePayload

  """
  This mutation triggers a aiTextGenerationSessionTextGenerated Subscription
  """
  triggerAiTextGenerated(
    """Parameters for TriggerAiTextGenerated"""
    input: TriggerAiTextGeneratedInput!
  ): TriggerAiTextGeneratedPayload

  """
  This mutation triggers a paymentCollected Subscription but doesn't acknowledge the payment.
  """
  triggerPaymentCollected(
    """Parameters for TriggerPaymentCollected"""
    input: TriggerPaymentCollectedInput!
  ): TriggerPaymentCollectedPayload

  """
  This mutation triggers a paymentDisbursed Subscription but doesn't acknowledge the payment.
  """
  triggerPaymentDisbursed(
    """Parameters for TriggerPaymentDisbursed"""
    input: TriggerPaymentDisbursedInput!
  ): TriggerPaymentDisbursedPayload

  """
  This mutation triggers a paymentStarted Subscription but doesn't acknowledge the payment.
  """
  triggerPaymentStarted(
    """Parameters for TriggerPaymentStarted"""
    input: TriggerPaymentStartedInput!
  ): TriggerPaymentStartedPayload
  triggerProposalAccepted(
    """Parameters for TriggerProposalAccepted"""
    input: TriggerProposalAcceptedInput!
  ): TriggerProposalAcceptedPayload
}

type Payment {
  id: ID!
  reference: String!
}

type Practice {
  id: ID!
  name: String!
  principal: User!
}

type Proposal {
  id: ID!
  name: String!
}

type Query {
  codeVersion: String!
  currentUser: User
  environment: String!
}

"""Autogenerated input type of SeedActiveServicesForRenewal"""
input SeedActiveServicesForRenewalInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  practiceId: ID!
}

"""Autogenerated return type of SeedActiveServicesForRenewal."""
type SeedActiveServicesForRenewalPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  practice: Practice!
  principal: User!
}

"""Autogenerated input type of SeedPracticesWithPaymentControlStates"""
input SeedPracticesWithPaymentControlStatesInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
}

"""Autogenerated return type of SeedPracticesWithPaymentControlStates."""
type SeedPracticesWithPaymentControlStatesPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  practices: [Practice!]!
}

"""Autogenerated input type of SeedPracticeWithBillingItems"""
input SeedPracticeWithBillingItemsInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String

  """Practice's country code."""
  countryCode: String = "au"

  """
  Pre-created billing_items with different traits. Available options: archived,
  billed, billed_automatically, billed_manually, billing_failed,
  estimate_quantity_rule, fixed_price_item, included_price_item, minimum_item,
  price_range_item, search_indexed, skip_search_index,
  smart_billing_quantity_rule, unbilled, unit_price, with_credit_card,
  with_engagement_billable_service, with_proposal_billable_service
  """
  billingItemsTraits: [String!] = ["billed_automatically", "billed_manually", "billed_manually", "unbilled", "price_range_item", "minimum_item", "unit_price"]

  """feature flag that would apply to the practice"""
  featureFlags: [String!]
}

"""Autogenerated return type of SeedPracticeWithBillingItems."""
type SeedPracticeWithBillingItemsPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  practice: Practice!
}

"""Autogenerated input type of SeedPracticeWithPayments"""
input SeedPracticeWithPaymentsInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String

  """Practice's country code."""
  countryCode: String = "au"

  """
  Pre-created payments with different traits. Available options: cancelled,
  clawed_back, clawing_back, collected, collecting, collection_scheduled,
  disbursed, disbursing, disbursing_next, refund_scheduled, refunding,
  uncollected, with_approved_refund, with_authentication_required_collection,
  with_completed_clawback, with_completed_collection, with_completed_deployment,
  with_completed_disbursal, with_completed_refund, with_declined_refund,
  with_failed_clawback, with_failed_collection, with_failed_disbursal,
  with_failed_refund, with_lost_dispute, with_pending_refund,
  with_started_clawback, with_started_collection, with_started_disbursal,
  with_started_dispute, with_started_refund, with_won_dispute
  """
  paymentsTraits: [String!] = ["collected", "collection_scheduled", "disbursing_next", "cancelled", "with_failed_collection", "disbursed", "clawed_back"]

  """feature flag that would apply to the practice"""
  featureFlags: [String!]
}

"""Autogenerated return type of SeedPracticeWithPayments."""
type SeedPracticeWithPaymentsPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  practice: Practice!
}

"""Autogenerated input type of SeedPracticeWithTfaUser"""
input SeedPracticeWithTfaUserInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  practiceName: String!
  userEmail: String!
}

"""Autogenerated return type of SeedPracticeWithTfaUser."""
type SeedPracticeWithTfaUserPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  practice: Practice!
  user: User!
}

"""Autogenerated input type of SeedStandardPractice"""
input SeedStandardPracticeInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  practiceId: ID!

  """Available options: gusto, qbo, xero, xpm, proconnect"""
  integrations: [String!] = []

  """
  Available options: accepted, accepts_credit_card, accepts_direct_debit,
  approved, archived, awaiting_acceptance, change_requested, completed, draft,
  lost, new, not_in_review, review_requested, search_indexed, sent, signed,
  signed_externally_and_accepted, signed_internally,
  signed_internally_and_accepted, skip_search_index, start_on_acceptance,
  start_on_date, user_as_sender, with_accepted_client_services,
  with_all_service_types, with_brochure, with_fixed_service,
  with_included_service, with_minimum_service, with_multiple_options,
  with_multiple_signatories, with_next_steps_message,
  with_payment_method_bank_account, with_payment_method_credit_card,
  with_price_range_service, with_recipient, with_signatory, with_unit_service,
  with_videos, with_workflow
  """
  proposalsTraits: [String!] = []

  """
  Available options: acceptable, accepts_credit_card, accepts_direct_debit,
  active, billable_today, billed_monthly, billed_weekly, completed, deleted,
  draft, from_web_connector, hide_display_totals, invalid, lost,
  old_accept_page, queued, requiring_payment_method, revoked, sent,
  should_bill_continuously, show_service_prices, with_a_parent,
  with_a_prorata_service, with_all_billing_types,
  with_all_billing_types_and_standardized_pricing, with_bank_account, with_cc,
  with_credit_card, with_embedded_document, with_gst_included,
  with_invoiced_non_recurring_services, with_new_proposal_email_template,
  with_oncompletion_service_and_deposit, with_payment_method_accepted,
  with_payments_enabled, with_pending_collection, with_recurring_job,
  with_scheduled_invoices, with_services, with_uninvoiced_boc_services,
  with_uninvoiced_estimate_services, with_uninvoiced_hourly_estimate_services,
  with_upfront_job, with_upfront_job_and_recurring_job, with_videos
  """
  cpeProposalsTraits: [String!] = []

  """
  Available options: archived, billed, billed_automatically, billed_manually,
  billing_failed, estimate_quantity_rule, fixed_price_item, included_price_item,
  minimum_item, price_range_item, search_indexed, skip_search_index,
  smart_billing_quantity_rule, unbilled, unit_price, with_credit_card,
  with_engagement_billable_service, with_proposal_billable_service
  """
  billingItemsTraits: [String!] = []
}

"""Autogenerated return type of SeedStandardPractice."""
type SeedStandardPracticePayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  practice: Practice!
  principal: User!
  proposals: [Engagement!]!
}

type Session {
  """Generation type"""
  generationType: String
  id: ID!

  """Latest generated text result"""
  text: String
}

"""Autogenerated input type of TriggerAiTextGenerated"""
input TriggerAiTextGeneratedInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String

  """ID (external_id) of the ai session"""
  sessionId: ID!

  """ID of the user"""
  userId: ID!

  """Generated text"""
  generatedText: String!
}

"""Autogenerated return type of TriggerAiTextGenerated."""
type TriggerAiTextGeneratedPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  session: Session
}

"""Autogenerated input type of TriggerPaymentCollected"""
input TriggerPaymentCollectedInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String

  """ID (slug) of the practice of the proposal"""
  practiceId: ID!

  """ID (slug) of the payment to trigger the subscription with"""
  id: ID!
}

"""Autogenerated return type of TriggerPaymentCollected."""
type TriggerPaymentCollectedPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  payment: Payment
}

"""Autogenerated input type of TriggerPaymentDisbursed"""
input TriggerPaymentDisbursedInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String

  """ID (slug) of the practice of the proposal"""
  practiceId: ID!

  """ID (slug) of the payment to trigger the subscription with"""
  id: ID!
}

"""Autogenerated return type of TriggerPaymentDisbursed."""
type TriggerPaymentDisbursedPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  payment: Payment
}

"""Autogenerated input type of TriggerPaymentStarted"""
input TriggerPaymentStartedInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String

  """ID (slug) of the practice of the proposal"""
  practiceId: ID!

  """ID (slug) of the payment to trigger the subscription with"""
  id: ID!
}

"""Autogenerated return type of TriggerPaymentStarted."""
type TriggerPaymentStartedPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  payment: Payment
}

"""Autogenerated input type of TriggerProposalAccepted"""
input TriggerProposalAcceptedInput {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String

  """ID (slug) of the practice of the proposal"""
  practiceId: ID!

  """ID (slug) of the proposal to trigger the subscription with"""
  id: ID!
}

"""Autogenerated return type of TriggerProposalAccepted."""
type TriggerProposalAcceptedPayload {
  """A unique identifier for the client performing the mutation."""
  clientMutationId: String
  proposal: Proposal
}

type User {
  email: String!
  id: ID!
}

